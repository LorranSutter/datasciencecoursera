for(k in lista){}
for(k in lista){
if()
}
?download.file
getwd()
setwd("./datasciencecoursera")
getwd()
setwd("./Getting and Cleaning Data")
getwd(
)
fileUrl <- "https://data.baltimorecity.gov/resource/dz54-2aru.json"
download.file(fileUrl, destfile = "./data/cameras.json", method = "curl")
list.files("./data")
fileUrl <- "https://data.baltimorecity.gov/resource/dz54-2aru.json"
download.file(fileUrl, destfile = "./data/cameras.json")
if(!file.exists("./data/cameras.json")){
dir.create("./data/cameras.json")
}
dir.create("./data")
if(!file.exists("./data/cameras.json")){
dir.create("./data/cameras.json")
}
fileUrl <- "https://data.baltimorecity.gov/resource/dz54-2aru.json"
download.file(fileUrl, destfile = "./data/cameras.json")
fileUrl <- "https://data.baltimorecity.gov/resource/dz54-2aru.json"
download.file(fileUrl, destfile = "./data/cameras.json")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
install.packages("XLConnect")
library(XLConnect)
install.packages("XML")
install.packages("XML")
library(XML)
install.packages("rJava")
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rootNode <- xmlRoot()
xmlName(rootNode)
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
?xmlTreeParse
doc <- xmlTreeParse("./data/cameras.xml", useInternal = TRUE)
rootNode <- xmlRoot()
rootNode <- xmlRoot(doc)
xmlName(rootNode)
download.file(fileUrl, destfile = "./data/simple.xml")
doc <- xmlTreeParse("./data/simple.xml", useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
installed.packages("xlsx")
install.packages("xlsx")
library(xlsx)
install.packages("rJav")
install.packages("rJava")
rootNode
rootNode[1]
rootNode[[1]]
rootNode[[1]][1]
rootNode[[1]][[1]]
rootNode[[1]][[2]]
rootNode[[1]][[price]]
rootNode[[1]][price]
rootNode[[1]]["price"]
rootNode["price"]
xmlSApply(rootNode, xmlValue)
class(xmlSApply(rootNode, xmlValue))
dim(xmlSApply(rootNode, xmlValue))
?xmlSApply
xmlSApply(rootNode,"//name", xmlValue)
xpathSApply(rootNode,"//name", xmlValue)
xpathSApply(rootNode,"//price",xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
download.file("http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens")
download.file("http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens", destfile = "teste.xml")
download.file("view-source:http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens", destfile = "teste.xml")
fileUrl <- "http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternal = TRUE)
scores <- xpathSApply(doc, "//[@class='score']",xmlValue)
scores <- xpathSApply(doc, "//li[@class='score']",xmlValue)
teams <- xpathSApply(doc, "//li[@class='team-name']",xmlValue)
scores
teams
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
install.packages("curl")
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
names(jsonData$owner)
names(jsonData$owner$login)
jsonData$owner$login
iris
myjson <- toJSON(iris, pretty = TRUE)
cat(myjson)
myjson <- toJSON(iris, pretty = FALSE)
cat(myjson)
myjson <- toJSON(iris, pretty = TRUE)
cat(myjson)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "housing.csv")
housing <- read.csv("housing.csv")
housing$VAL
housing$VAL[housing$VAL == 24]
sum(housing$VAL[housing$VAL == 24], na.rm = TRUE)
sum(housing$VAL[housing$VAL == 24], na.rm = TRUE)/24
length(housing$VAL[housing$VAL == 24], na.rm = TRUE)/24
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(fileUrl, destfile = "Baltimore_resteurants.xml")
sum(housing$VAL[housing$VAL == 24], na.rm = TRUE)/24
doc <- xmlTreeParse("Baltimore_resteurants.xml", useInternal = TRUE)
rootNode <- xmlRoot(doc)
rootNode
rootNode$row
xmlName(rootNode)
names(rootNode)
xpathSApply(rootNode,"//zipcode",xmlValue)
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zipcode[zipcode == "21231"]
sum(zipcode[zipcode == "21231"]) #
sum(zipcode[zipcode == "21231"]) # d
sum(zipcode[zipcode == "21231"])
lenght(zipcode[zipcode == "21231"])
length(zipcode[zipcode == "21231"])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "gas_aquisition.csvl")
download.file(fileUrl, destfile = "gas_aquisition.csv")
install.packages("xlsx")
library(xlsx)
library(rJava)
install.packages("RJav")
install.packages("rJava")
library(data.table)
install.packages("data.table")
library(data.table)
DF <- data.frame(x = rnorm(9), y = rep(c("a","b","c"), each = 3), z = rnorm(9))
head(DF,3)
DT <- data.table(x = rnorm(9), y = rep(c("a","b","c"), each = 3), z = rnorm(9))
head(DT,3)
tables()
DF[2,]
DT[2,]
DT[2,]
DT[DT="a",]
DT[c(2,3),]
DT[2,]
DT[DT$y="a",]
DT[c(2,3),]
DT[DT$y="a",]
DT[2,]
DT[DT$y == "a",]
DT[c(2,3),]
DF[,2]
DF[,c(2,3)]
DT[,c(2,3)]
DT
DT[,table(y)]
DT[,mean(x)]
DT[,2]
DT[,1]
DF[,mean(x)]
DT[,mean(x)]
DT[,list(mean(x),sum(z))]
DT[,mean(y)]
DT[,list(mean(x),sum(z))]
DT[,mean(y)]
DT[,mean(x)]
DT[,list(mean(x),sum(z))]
DT[,table(y)]
DT[,w := z^2]
DT
DT[,m := {tmp <- (x+z); log2(tmp+5)}]
DT
DT[,a := x>0]
DT
DT[,b := mean(x+w), by = a]
DT
DT <- data.table(x = sample(letters[1:3], 1E5, TRUE))
DT[, .N, by=x]
DT
DT <- data.table(x = rep(c("a","b","c"), each = 100), y = rnorm(300))
DT
setkey(DT,x)
DT['a']
DT
DT1 <- data.table(x = c('a','a','b','dt1'), y = 1:4)
DT2 <- data.table(x = c('a','b','dt2'), y = 5:7)
DT1
DT2
setkey(DT1,x)
setkey(DT2,x)
merge(DT1,DT2)
?fread
DT <- fread("housing.csv")
DT
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, destfile = "housing2.csv")
download.file(fileUrl, destfile = "housing2.csv")
big_df <- data.frame(x = rnorm(1E6), y = rnorm(1E6))
file <- tempfile()
write.table(big_df, file = file, row.names = FALSE, col.names = TRUE, sep = "\t", quote = FALSE)
system.time(fread(file))
system.time(read.table(file, header = TRUE, sep = "\t"))
DT <- fread("housing.csv")
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
DT <- fread("housing2.csv")
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
DT$pwgtp1
system.time(DT[,mean(pwgtp15),by=SEX])
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15));system.time(mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==1,]
rowMeans(DT)
DT$pwgtp15
mean(DT$pwgtp15)
system.time(mean(DT$pwgtp15))
install.packages("xlsx") # try again
library(xlsx)
install.packages("rJava") # try again
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = "gas_aquisition.xlsx")
library(xlsx)
read.csv("gas_aquisition.xlsx")
?read.csv
gas_aquisition <- read.csv("gas_aquisition.csv")
gas_aquisition <- read.csv("gas_aquisition.csv", row.names = 1)
gas_aquisition <- read.csv("gas_aquisition.csv")
gas_aquisition
gas_aquisition$X.18
gas_aquisition$X
DT <- fread("housing2.csv")
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15)
mean(DT[DT$SEX==2,]$pwgtp15)

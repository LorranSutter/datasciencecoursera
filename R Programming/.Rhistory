outcomeFileFiltered <- outcomeFileFiltered[outcomeFileFiltered$State == state,]
outcomeFileFiltered <- outcomeFileFiltered[complete.cases(outcomeFileFiltered),]
outcomeFileFiltered <- if(num == "best"){
outcomeFileFiltered[outcomeFileFiltered[3] == min(outcomeFileFiltered[3]),]
}else if(num == "worst"){
outcomeFileFiltered[outcomeFileFiltered[3] == max(outcomeFileFiltered[3]),]
}else{
if(num > nrow(outcomeFileFiltered)){
return(NA)
}
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
#outcomeFileFiltered[orderedRate, ][num,]
outcomeFileFiltered[orderedRate, ]
}
names(outcomeFileFiltered) <- c("Hospital","State","Outcome")
head(outcomeFileFiltered,num)
}
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(!(state %in% outcomeFile$State)){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid state")
}
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFileFiltered <- outcomeFile[,c(2,7,outcome)]
outcomeFileFiltered <- outcomeFileFiltered[outcomeFileFiltered$State == state,]
outcomeFileFiltered <- outcomeFileFiltered[complete.cases(outcomeFileFiltered),]
outcomeFileFiltered <- if(num == "best"){
outcomeFileFiltered[outcomeFileFiltered[3] == min(outcomeFileFiltered[3]),]
}else if(num == "worst"){
outcomeFileFiltered[outcomeFileFiltered[3] == max(outcomeFileFiltered[3]),]
}else{
if(num > nrow(outcomeFileFiltered)){
return(NA)
}
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
#outcomeFileFiltered[orderedRate, ][num,]
outcomeFileFiltered[orderedRate, ]
}
names(outcomeFileFiltered) <- c("Hospital","State","Outcome")
#head(outcomeFileFiltered,num)
outcomeFileFiltered[num,]
}
rankhospital("NY", "heart attack", 7)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "")
for(outcomeFileState in outcomeFile){
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state", outcome = "outcome")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
result <- rbind(result, outcomeFileState[,c(1,2)])
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "")
for(outcomeFileState in outcomeFile){
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
result <- rbind(result, outcomeFileState[,c(1,2)])
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "")
for(outcomeFileState in outcomeFile){
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state", outcome = "outcome")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
result <- rbind(result, outcomeFileState[,c(1,2)])
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
outcome
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "")
for(outcomeFileState in outcomeFile){
names(outcomeFileState) <- c("hospital","state","outcome")
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
result <- rbind(result, outcomeFileState[,c(1,2)])
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "", outcome = "outcome")
for(outcomeFileState in outcomeFile){
names(outcomeFileState) <- c("hospital","state","outcome")
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
#result <- rbind(result, outcomeFileState[,c(1,2)])
result <- rbind(result, outcomeFileState)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "", outcome = "outcome")
for(outcomeFileState in outcomeFile){
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
#result <- rbind(result, outcomeFileState[,c(1,2)])
result <- rbind(result, outcomeFileState)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "", outcome = "outcome")
a <- c()
for(outcomeFileState in outcomeFile){
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
#result <- rbind(result, outcomeFileState[,c(1,2)])
#result <- rbind(result, outcomeFileState)
a <- c(a,outcomeFileState)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
#result
a
}
rankall("heart attack", 4)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## For each state, find the hospital of the given rank
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFile <- outcomeFile[,c(2,7,outcome)]
names(outcomeFile) <- c("hospital","state","outcome")
outcomeFile <- split(outcomeFile, outcomeFile$state)
result <- data.frame(hospital = "", state = "", outcome = "outcome")
for(outcomeFileState in outcomeFile){
outcomeFileState <- outcomeFileState[complete.cases(outcomeFileState),]
outcomeFileState <- if(num == "best"){
outcomeFileState[outcomeFileState[3] == min(outcomeFileState[3]),]
}else if(num == "worst"){
outcomeFileState[outcomeFileState[3] == max(outcomeFileState[3]),]
}else{
if(num > nrow(outcomeFileState)){
data.frame(hospital = NA, state = "state", outcome = "outcome")
}else{
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
outcomeFileFiltered[orderedRate, ]
}
}
#result <- rbind(result, outcomeFileState[,c(1,2)])
result <- rbind(result, outcomeFileState)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result
}
rankall("heart attack", 4)
rankhospital("HI", "heart attack", 7)
rankhospital("HI", "heart attack", 4)
rankhospital("NJ", "pneumonia", "worst")
rankhospital("NV", "heart failure", 10)
rankhospital("NJ", "pneumonia", "worst")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
rankhospital("HI", "heart attack", 4)
rankhospital("NV", "heart failure", 10)
rankhospital("NC", "heart attack", "worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(!(state %in% outcomeFile$State)){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid state")
}
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFileFiltered <- outcomeFile[,c(2,7,outcome)]
outcomeFileFiltered <- outcomeFileFiltered[outcomeFileFiltered$State == state,]
outcomeFileFiltered <- outcomeFileFiltered[complete.cases(outcomeFileFiltered),]
outcomeFileFiltered <- if(num == "best"){
outcomeFileFiltered[outcomeFileFiltered[3] == min(outcomeFileFiltered[3]),]
}else if(num == "worst"){
outcomeFileFiltered[outcomeFileFiltered[3] == max(outcomeFileFiltered[3]),]
}else{
if(num > nrow(outcomeFileFiltered)){
return(NA)
}
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
#outcomeFileFiltered[orderedRate, ][num,]
outcomeFileFiltered[orderedRate, ]
}
names(outcomeFileFiltered) <- c("Hospital","State","Outcome")
#head(outcomeFileFiltered,num)
#outcomeFileFiltered[num,]
outcomeFileFiltered
}
rankhospital("NC", "heart attack", "worst")
rankhospital("NJ", "pneumonia", "worst")
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcomeFile <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv", colClasses = "character")
outcomeFile[, 11] <- as.numeric(outcomeFile[, 11])
outcomeFile[, 17] <- as.numeric(outcomeFile[, 17])
outcomeFile[, 23] <- as.numeric(outcomeFile[, 23])
## Check that state and outcome are valid
if(!(state %in% outcomeFile$State)){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid state")
}
if(outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("Error in best(\"", state, "\", \"", outcome, "\") : invalid outcome")
}
## Return hospital name in that state with the given rank
## 30-day death rate
outcome <- if(outcome == "heart attack")
11
else if(outcome == "heart failure")
17
else
23
outcomeFileFiltered <- outcomeFile[,c(2,7,outcome)]
outcomeFileFiltered <- outcomeFileFiltered[outcomeFileFiltered$State == state,]
outcomeFileFiltered <- outcomeFileFiltered[complete.cases(outcomeFileFiltered),]
outcomeFileFiltered <- if(num == "best"){
outcomeFileFiltered[outcomeFileFiltered[3] == min(outcomeFileFiltered[3]),]
}else if(num == "worst"){
outcomeFileFiltered[outcomeFileFiltered[3] == max(outcomeFileFiltered[3]),]
}else{
if(num > nrow(outcomeFileFiltered)){
return(NA)
}
orderedRate <- order(outcomeFileFiltered[3],outcomeFileFiltered[1])
#outcomeFileFiltered[orderedRate, ][num,]
outcomeFileFiltered[orderedRate, ]
}
names(outcomeFileFiltered) <- c("Hospital","State","Outcome")
#head(outcomeFileFiltered,num)
if(is.numeric(num))
outcomeFileFiltered[num,]
else
outcomeFileFiltered
}
rankhospital("NJ", "pneumonia", "worst")
rankhospital("NJ", "pneumonia", 2)
